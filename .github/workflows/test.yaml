---
name: Module Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  VAULT_NAMESPACE: "root"
  VAULT_ADDR: http://vault:8200
  VAULT_TOKEN: root

jobs:
  module-test:
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:runner-latest

    permissions:
      contents: read  # checkout repository
      id-token: write  # create

    services:
      vault:
        image: hashicorp/vault:latest
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: root
          VAULT_LOG_LEVEL: debug
        options: >-
          --cap-add=IPC_LOCK
      mariadb:
        image: mysql:5.7
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: vault-admin
          MYSQL_PASSWORD: paSSw0rD
          MYSQL_ROOT_PASSWORD: paSSw0rD
          MYSQL_DATABASE: wp_vault_test
        ports:
            - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Update vault-admin grants
        run: |
          sudo apt update
          sudo apt install mysql-client -y
          mysql --host mariadb -uroot -ppaSSw0rD -e "CREATE DATABASE IF NOT EXISTS wp_vault_test;"
          mysql --host mariadb -uroot -ppaSSw0rD -e "CREATE USER IF NOT EXISTS 'vault-admin'@'%' IDENTIFIED WITH mysql_native_password BY 'paSSw0rD';"
          mysql --host mariadb -uroot -ppaSSw0rD -e "GRANT ALL PRIVILEGES ON '*.*' TO 'vault-admin'@'%' WITH GRANT OPTION;"

      - name: Execute Terraform Plan
        id: test
        run: |
          cd examples/test
          terraform init
          terraform plan
          terraform apply -auto-approve

      - run: echo ${{ steps.test.outputs }}
      - run: echo ${{ steps.test.outputs }}
      - run: echo ${{ steps.test.outputs.stdout }}

      - name: Vault actions
        run: |
          echo $(curl --location --request LIST 'http://vault:8200/v1/database/config' --header 'X-Vault-Token: root')
          echo $(curl --location --request LIST 'http://vault:8200/v1/database/roles' --header 'X-Vault-Token: root')
          echo $(curl --location --request GET 'http://vault:8200/v1/database/roles/testorg--wp-1' --header 'X-Vault-Token: root')
          mysql --host mariadb -uvault-admin -ppaSSw0rD -e "show databases;"

      # We've configured pull requests to be allowed to read the
      # secret path "database/creds/ORG-ROLE".
      # We are unable to read "secret/data/main/secret".
      - name: Import Secrets
        uses: hashicorp/vault-action@v2
        id: secrets
        with:
          url: ${{ env.VAULT_ADDR }}
          method: token
          token: root
          secrets: |
            database/creds/testorg--wp-1 username | USERNAME ;
            database/creds/testorg--wp-1 password | PASSWORD

      - run: echo ${{ steps.secrets.outputs.USERNAME }}
      - run: echo ${{ steps.secrets.outputs.PASSWORD }}
      - name: Check connection to MySql with new user
        run: |
          mysql --host mariadb -u${{ steps.secrets.outputs.USERNAME }} -p${{ steps.secrets.outputs.PASSWORD }} -e "show databases;"
